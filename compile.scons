import os

Import('env derived_sources translate_filter_processes')

# builders
if 'NABP_USE_MODELSIM' in env:
    vlib_path = os.path.join(Dir('.').abspath, 'work')
    os.system('vlib ' + vlib_path)
    os.system('vmap work ' + vlib_path)
    verilog_action = 'echo "building $TARGET";' + \
            'vlog -work ' + vlib_path + ' $SOURCES'
    verilog_builder = Builder(
            action=verilog_action,
            suffix='', src_suffix='.vx')
else:
    verilog_builder = Builder(
            action='iverilog -Wall -Winfloop -o $TARGET $SOURCES',
            suffix='.vvp', src_suffix='.vx')
env.Append(BUILDERS={'Verilog': verilog_builder})

# target aliases
compiled_tests = []
for alias in derived_sources.iterkeys():
    target = env.Verilog(
            target=alias,
            source=derived_sources[alias])
    if 'test' in alias:
        compiled_tests.append(target)
        Depends(target, translate_filter_processes)
    env.Alias(alias, target)

Export('compiled_tests')

# vim:ft=python:
