import os
import itertools
from akpytemp import Template

def generate_derived_sources(target, source, env):
    for tgt, src in itertools.izip(target, source):
        Template(path=str(src)).save(str(tgt), **env.__dict__)
    return 0

env = Environment()
source_generator = Builder(
        action=generate_derived_sources, suffix='.vx', src_suffix='.v')
env.Append(
        BUILDERS = {
            'Generate': source_generator,
        })

sources = Split("""
    dual_port_ram.v
    filtered_ram_swappable.v
    filtered_ram_swap_control.v
    processing_element.v
    processing_swappable.v
    processing_swap_control.v
    mapper.v
    mapper_lut.v
    shifter.v
    shifter_lut.v
    state_control.v
    filtered_ram_test.v
    shift_register.v
    processing_swappable_test.v
    """)
targets = []
for src in sources:
    name, _ = os.path.splitext(src)
    targets.append(name + '.vx')

generate_sources = env.Generate(target=targets, source=sources)
env.Alias('gen_only', generate_sources)

# vim:ft=python:
