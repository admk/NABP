from pynabp.conf_gen import config
from scons_utils import flatten, device_path

# building blocks for targets
ingredients = {
        'common': Split("""
            shift_register.v
            hs_angles.v
            """),
        'filtered_ram': Split("""
            dual_port_ram.v
            filtered_ram_swappable.v
            filtered_ram_swap_control.v
            """),
        'processing': Split("""
            mapper.v
            mapper_lut.v
            shifter.v
            shifter_lut.v
            line_buffer.v
            processing_swappable_state_control.v
            processing_swappable.v
            processing_data_path_verify.v
            """),
    }

# If the source file is target specific, it will look up the folder
#     src/devices/{{ device name }}/
# for the source.
#
# If such source file does not exist, then it finds the variant in the folder
#     src/devices/generic/
#
# device targeting source code specifier list
device_specific = Split("""
        mapper_lut.v
        shifter_lut.v
        line_buffer.v
        shift_register.v
        dual_port_ram.v
        filter.v
        """)

# targets
sources = {
        'fr_test':
            ingredients['filtered_ram'] +
            Split("""
                filtered_ram_test.v
                """),
        'pg_test':
            ingredients['processing'] +
            Split("""
                processing_swappable_test.v
                """),
        'pw_test':
            ingredients['processing'] +
            Split("""
                processing_swap_control.v
                processing_test.v
                """),
    }

Import('SOURCE_DIR')

for target in sources.iterkeys():
    sources[target] = device_path(
            config['device'],
            device_specific,
            sources[target] + ingredients['common'],
            SOURCE_DIR)

sources['all'] = flatten(sources)

Export('sources')

# vim:ft=python:
